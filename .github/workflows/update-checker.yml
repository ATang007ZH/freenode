# 请确保替换path/to/your/file为你要监控的文件路径，替换your-username/your-repository为你的GitHub仓库名，并在仓库设置中添加一个名为REPOSITORY_DISPATCH_TOKEN的Secret，用于触发其他工作流。
# 此工作流将每5分钟检查一次指定文件的更新。如果检测到文件更新，它将触发一个名为file-updated的自定义事件。你可以创建另一个工作流来响应这个事件并执行相应的操作。
# 
name: 监控文件更新

on:
  schedule:
    - cron: '*/5 * * * *'  # 每5分钟检查一次

jobs:
  check_file_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Check for file updates
        id: check_update
        run: |
          import os
          import time

          FILE_TO_WATCH = "wiki/v2ray免费账号"  # 替换为你要监控的文件路径

          def get_last_modified_time(file_path):
              return os.path.getmtime(file_path)

          last_modified_time = get_last_modified_time(FILE_TO_WATCH)

          time.sleep(5)  # 等待5秒，模拟文件更新

          current_modified_time = get_last_modified_time(FILE_TO_WATCH)

          if last_modified时间 != current_modified_time:
              print(f"文件 {FILE_TO_WATCH} 已更新")
              # 在这里添加文件更新后的操作
              updated = True
          else:
              updated = False

          updated

      - name: Trigger workflow on file update
        if: steps.check_update.outputs.updated == 'true'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPOSITORY_DISPATCH_TOKEN }}
          repository: Alvin9999/new-pac  # 替换为你的仓库名
          event-type: file-updated
